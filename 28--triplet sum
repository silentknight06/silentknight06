---------------------------28- triplet sum---------------------------

#include<bits/stdc++.h>
using namespace std;
 int triplet(int arr[], int n, int x){
  // time --- n2
  // space ---n
  int ans = 0;
  for(int i = 0; i<n; i++){
    unordered_set<int > s;
    int curr = x-arr[i];
    for(int j = i+1; j<n; j++){
      if(s.find(curr-arr[j]) != s.end()){
        ans++;
        break;
      }
       s.insert(arr[j]);
    }
   

  }
   return ans;
 }
int main(){
 int n = 6, x= 13;
 int arr[n] = {1 ,4 ,45, 6, 10, 8};

  cout<<triplet(arr, n, x)<<endl;


  return 0;
}
---------------------------------------------------------------------- 2nd methord----------------------
#include<bits/stdc++.h>
using namespace std;
 int triplet(int a[], int n, int x){
  // time --- n2
  // space ---1
  sort(a, a+n);
  int ans = 0;
  for(int i = 0; i<n-2; i++){
    int l  = i+1;
  int  r = n-1;
  while(l<r){
    if(a[i]+a[l]+a[r]==x){
      ans = 1;
      break;
    }else if(a[i]+a[l]+a[r]<x){
      l++;
    }else{
      r--;
    }
    if(ans==1)
    break;
  }
  }
  return ans;

 }
int main(){
 int n = 6, x= 13;
 int arr[n] = {1 ,4 ,45, 6, 10, 8};

  cout<<triplet(arr, n, x)<<endl;


  return 0;
}
